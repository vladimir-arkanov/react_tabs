{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","setSelectedTab","properTab","find","element","id","className","map","tab","classNames","href","onClick","newTab","title","content","App","useState","selectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EACT,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAClBC,EAAYH,EAAKI,MAAK,SAAAC,GAAO,OACjCA,EAAQC,KAAOL,MACXD,EAAK,GAQX,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAC,GAAG,OACX,oBAEEF,UAAWG,IACT,CAAE,aAAsB,OAATP,QAAS,IAATA,OAAA,EAAAA,EAAWG,MAAOG,EAAIH,KAHzC,SAME,mBACEK,KAAI,WAAMF,EAAIH,IACd,UAAQ,UACRM,QAAS,WApBA,IAACC,KAoBoBJ,GAnB/BH,KAAOL,GAChBC,EAAeW,IAeP,SAKGJ,EAAIK,SAVFL,EAAIH,WAiBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGJ,QADH,IACGA,OADH,EACGA,EAAWY,cCxCTf,EAAO,CAClB,CAAEM,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASjB,EAAK,IAApD,mBAAOkB,EAAP,KAAoBhB,EAApB,KAEA,OACE,sBAAKK,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBW,EAAYJ,SAElC,cAAC,EAAD,CACEd,KAAMA,EACNC,cAAeiB,EAAYZ,GAC3BJ,eAAgBA,QCpBxBiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.556217f5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../type/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  setSelectedTab: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props>\n  = ({ tabs, selectedTabId, setSelectedTab }) => {\n    const properTab = tabs.find(element => (\n      element.id === selectedTabId\n    )) || tabs[0];\n\n    const newSelectedTab = (newTab: Tab) => {\n      if (newTab.id !== selectedTabId) {\n        setSelectedTab(newTab);\n      }\n    };\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={classNames(\n                  { 'is-active': properTab?.id === tab.id },\n                )}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => newSelectedTab(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {properTab?.content}\n        </div>\n      </div>\n    );\n  };\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        setSelectedTab={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}